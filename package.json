{
	"name": "metamorphosis",
	"description": "A css variable management library that helps create and organize variables into easily configurable themes.",
	"version": "0.0.0-semantically-released",
	"type": "module",
	"module": "./dist/index.js",
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"import": "./dist/index.js"
		},
		"./*": {
			"types": "./dist/*.d.ts",
			"import": "./dist/*.js"
		},
		"./BaseTheme": "./dist/BaseTheme.js",
		"./tailwind": "./dist/tailwind.js"
	},
	"scripts": {
		"debug": "ts-node -r tsconfig-paths/register -T --esm",
		"build": "vite build",
		"build:dev": "vite build --mode development",
		"build:watch": "vite build --watch --mode production",
		"build:types": "tsc -p tsconfig.types.json && npm run build:types:fix",
		"build:types:fix": "tsc-alias -p tsconfig.types.json --debug",
		"lint:eslint": "eslint \"{src,tests,bin}/**/*.{cjs,js,ts}\" \"*.{cjs,js,ts}\" --max-warnings=0 --report-unused-disable-directives",
		"lint:types": "tsc --noEmit --pretty",
		"lint:commits": "commitlint --from $(git rev-list --max-parents=0 HEAD) --to HEAD --verbose",
		"lint:imports": "madge --circular --extensions ts ./src",
		"lint": "npm run lint:types && npm run lint:eslint && npm run lint:imports",
		"coverage": "vitest --coverage",
		"coverage:dev": "vitest --watch --coverage",
		"test": "npm run lint:types && vitest run",
		"test:watch": "vitest --watch",
		"doc": "typedoc --options typedoc.config.cjs",
		"doc:watch": "onchange -i \"src/**/*.ts\" \"typedoc.config.cjs\" -- npm run doc",
		"doc:serve": "http-server docs --port=5001",
		"doc:dev": "concurrently \"npm run doc:watch\" \"npm run doc:serve\"",
		"doc:check-invalid": "typedoc --options typedoc.config.cjs --listInvalidSymbolLinks",
		"actions:debug": "act -r -v -j build-only",
		"prepare": "bash -c '[ -d \".git\" ] && husky install && npm run _prepare || npm run _prepare'",
		"_prepare": "npm run build",
		"gen:exports": "indexit update --ignore {Units,utils,internal}.ts -o '${path}.js'"
	},
	"dependencies": {
		"@alanscodelog/utils": "4.0.0-beta.5"
	},
	"peerDependencies": {
		"colorjs.io": "^0.4.3",
		"tailwindcss": "^3.3.2"
	},
	"peerDependenciesMeta": {
		"colorjs.io": {
			"optional": true
		},
		"tailwindcss": {
			"optional": true
		}
	},
	"devDependencies": {
		"@alanscodelog/commitlint-config": "^2.0.0",
		"@alanscodelog/eslint-config": "^4.0.3",
		"@alanscodelog/semantic-release-config": "^3.0.0",
		"@alanscodelog/tsconfigs": "^3.1.3",
		"@types/node": "^20.4.1",
		"@typescript-eslint/eslint-plugin": "^5.61.0",
		"@typescript-eslint/parser": "^5.61.0",
		"@vitest/coverage-c8": "^0.33.0",
		"@vue/eslint-config-typescript": "^11.0.3",
		"colorjs.io": "^0.4.5",
		"commitlint": "^17.6.6",
		"concurrently": "^8.2.0",
		"cross-env": "^7.0.3",
		"eslint": "^8.44.0",
		"eslint-import-resolver-typescript": "^3.5.5",
		"eslint-plugin-import": "^2.27.5",
		"eslint-plugin-jsdoc": "^46.4.3",
		"eslint-plugin-simple-import-sort": "^10.0.0",
		"eslint-plugin-vue": "^9.15.1",
		"fast-glob": "^3.3.0",
		"http-server": "^14.1.1",
		"husky": "^8.0.3",
		"indexit": "2.1.0-beta.3",
		"jsdom": "^22.1.0",
		"madge": "^6.1.0",
		"onchange": "^7.1.0",
		"semantic-release": "^21.0.7",
		"tailwindcss": "^3.3.2",
		"ts-node": "^10.9.1",
		"tsc-alias": "^1.8.7",
		"typedoc": "^0.24.8",
		"typescript": "^5.1.6",
		"vite": "^4.4.2",
		"vite-tsconfig-paths": "^4.2.0",
		"vitest": "^0.33.0"
	},
	"files": [
		"src",
		"dist"
	],
	"release": {
		"extends": [
			"@alanscodelog/semantic-release-config"
		]
	},
	"commitlint": {
		"extends": [
			"@alanscodelog"
		]
	},
	"engines": {
		"node": ">=18"
	},
	"author": "Alan <alanscodelog@gmail.com>",
	"repository": "https://github.com/alanscodelog/metamorphosis",
	"keywords": [
		"css",
		"variables",
		"management",
		"theme",
		"theming",
		"tailwind"
	],
	"license": "MIT",
	"@comments": {
		"exports": "Tailwind won't work unless a require is added or I direct the subpath directly to the file. ???",
		"peerDependencies": "colorsjs.io is only needed if using the base theme",
		"scripts": {
			"test": "Runs `lint:types` before (so that flags can be passed to the test command) so that we can test type assertions. See expect_type function in @alanscodelog/utils.",
			"lint:commits": "Lints all unpushed commits in the active branch.",
			"prepare": "Needed so that if we pull the package from git it will get built and installed properly. The HUSKY stuff is a workaround for https://github.com/typicode/husky/issues/1213",
			"actions:debug": "For debugging github build action locally with nektos/act. Requires act and docker. Note: Cache will never work locally because of https://github.com/nektos/act/issues/285"
		}
	},
	"private": false
}
